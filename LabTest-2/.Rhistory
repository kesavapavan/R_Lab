}
fun(mat)
mat <- matrix(seq(10),nrow=5)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
submat <- matrix(NA,nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
submat[,c] <- mat[,i]
c <- c+1
}
}
mat <- matrix(seq(10),nrow=5)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
submat <- matrix(NA,nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
submat[,c] <- mat[,i]
c <- c+1
}
}
#return(submat)
#}
mat <- matrix(seq(10),nrow=5)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
submat <- matrix(NA,nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
submat[,c] <- mat[,i]
c <- c+1
}
}
### A ##
#fun <- function (){
mat <- matrix(seq(10),nrow=5)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
submat <- matrix(NA,nrow=nrow,ncol=ncol)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
submat[,c] <- mat[,i]
c <- c+1
}
}
#return(submat)
#}
submat
row
row <- c(1,1)
rbind(submat,row)
### A ##
#fun <- function (){
mat <- matrix(seq(10),nrow=5)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
submat <- matrix(NA,nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
cbind(submat,mat[,1])
c <- c+1
}
}
#return(submat
submat
### A ##
#fun <- function (){
mat <- matrix(seq(10),nrow=5)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
submat <- matrix(NA,nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
submat <- cbind(submat,mat[,1])
c <- c+1
}
}
#return(submat)
#}
submat
### A ##
#fun <- function (){
mat <- matrix(seq(10),nrow=5)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
submat <- matrix(nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
submat <- cbind(submat,mat[,1])
c <- c+1
}
}
#return(submat)
#}
submat
### A ##
#fun <- function (){
mat <- matrix(seq(10),nrow=5)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
#submat <- matrix(NA,nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
submat <- cbind(submat,mat[,i])
}
}
#return(submat)
#}
#fun(mat)
submat
### A ##
#fun <- function (){
mat <- matrix(seq(10),nrow=2)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
submat <- matrix(NA,nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
submat <- cbind(submat,mat[,i])
}
}
#return(submat)
#}
#fun(mat)
submat
submat <- matrix(NA,nrow=nrow)
dim(submat)
### A ##
#fun <- function (){
mat <- matrix(seq(10),nrow=2)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
submat <- matrix()
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
#if(dim(submat)[2]==1){
#  submat[,1] <- mat
#}
submat <- cbind(submat,mat[,i])
}
}
#return(submat)
#}
### A ##
#fun <- function (){
mat <- matrix(seq(10),nrow=2)
ncol = dim(mat)[2]
nrow = dim(mat)[1]
submat <- matrix(NA,nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
if(dim(submat)[2]==1){
submat[,1] <- mat[,i]
}
submat <- cbind(submat,mat[,i])
}
}
#return(submat)
#}
submat
### A ##
fun <- function (){
nrow = dim(mat)[1]
ncol = dim(mat)[2]
submat <- matrix(NA,nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
if(dim(submat)[2]==1){
submat[,1] <- mat[,i]
}
submat <- cbind(submat,mat[,i])
}
}
return(submat)
}
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
fun(mat)
### A ##
fun <- function (mat){
nrow = dim(mat)[1]
ncol = dim(mat)[2]
submat <- matrix(NA,nrow=nrow)
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
if(dim(submat)[2]==1){
submat[,1] <- mat[,i]
}
submat <- cbind(submat,mat[,i])
}
}
return(submat)
}
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
fun(mat)
### A ##
fun <- function (mat){
nrow = dim(mat)[1]
ncol = dim(mat)[2]
c <- 1
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
if(dim(submat)[2]==1){
submat <- matrix(mat[,i])
}
submat <- cbind(submat,mat[,i])
}
}
return(submat)
}
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
fun(mat)
### A ##
fun <- function (mat){
nrow = dim(mat)[1]
ncol = dim(mat)[2]
flag <- 0  # sub matrix not created
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
if(flag==0){
submat <- matrix(mat[,i])
flag = 1
}
submat <- cbind(submat,mat[,i])
}
}
return(submat)
}
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
fun(mat)
### A ##
fun <- function (mat){
nrow = dim(mat)[1]
ncol = dim(mat)[2]
flag <- 0  # sub matrix not created
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
if(flag==0){
submat <- matrix(mat[,i])
flag <- 1
}
submat <- cbind(submat,mat[,i])
}
}
return(submat)
}
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
fun(mat)
mat
### A ##
fun <- function (mat){
nrow = dim(mat)[1]
ncol = dim(mat)[2]
flag <- 0  # sub matrix not created
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
if(flag==0){
submat <- matrix(mat[,i],nrow=nrow)
flag <- 1
}
submat <- cbind(submat,mat[,i])
}
}
return(submat)
}
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
fun(mat)
mat
### A ##
fun <- function (mat){
nrow = dim(mat)[1]
ncol = dim(mat)[2]
flag <- 0  # sub matrix not created
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
if(flag==0){
submat <- matrix(mat[,i],nrow=nrow)
flag <- 1
continue
}
submat <- cbind(submat,mat[,i])
}
}
return(submat)
}
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
fun(mat)
### A ##
fun <- function (mat){
nrow = dim(mat)[1]
ncol = dim(mat)[2]
flag <- 0  # sub matrix not created
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
if(flag==0){
submat <- matrix(mat[,i],nrow=nrow)
flag <- 1
next
}
submat <- cbind(submat,mat[,i])
}
}
return(submat)
}
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
fun(mat)
mat
### A ##
fun <- function (mat){
nrow = dim(mat)[1]
ncol = dim(mat)[2]
flag <- 0  # sub matrix not created
for(i in 1:ncol){
if(!any(is.na(mat[,i]))){
if(flag==0){
submat <- matrix(mat[,i],nrow=nrow)
flag <- 1
next
}
submat <- cbind(submat,mat[,i])
}
}
return(submat)
}
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
fun(mat)
na.omit(mat)
mat
tm1<-mat[,-which(apply(mat,2,function(x)any(is.na(x))))]
tm1
tm1<-mat[,which(apply(mat,2,function(x)any(is.na(x))))]
tm1
mat
### A ##
f1 <- function(mat){
sub <- mat[,which(apply(mat,2,function(x)!any(is.na(x))))]
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
sub
### A ##
f1 <- function(mat){
sub <- mat[,which(apply(mat,2,function(x)!any(is.na(x))))]
return sub
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
### A ##
f1 <- function(mat){
sub <- mat[,which(apply(mat,2,function(x)!any(is.na(x))))]
return(sub)
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
### A ##
f1 <- function(mat){
sub <- mat[,which(apply(mat,2,function(x)!any(is.na(x))))]
return(sub)
}
### B ###
f2 <- function(mat){
sub <- mat[,-which(apply(mat,1,function(x)any(is.na(x))))]
sub <- sub[-which(apply(mat,1,function(x)any(is.na(x)))),]
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
f2(mat)
### A ##
f1 <- function(mat){
sub <- mat[,which(apply(mat,2,function(x)!any(is.na(x))))]
return(sub)
}
### B ###
f2 <- function(mat){
sub <- mat[,-which(apply(mat,1,function(x)any(is.na(x))))]
sub <- sub[-which(apply(mat,1,function(x)any(is.na(x)))),]
return(sub)
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
f2(mat)
mat
### A ##
f1 <- function(mat){
sub <- mat[,which(apply(mat,2,function(x)!any(is.na(x))))]
return(sub)
}
### B ###
f2 <- function(mat){
sub <- mat[-which(apply(mat,1,function(x)any(is.na(x)))),]
sub <- sub[,-which(apply(mat,2,function(x)any(is.na(x))))]
return(sub)
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
f2(mat)
### A ##
f1 <- function(mat){
sub <- mat[,which(apply(mat,2,function(x)!any(is.na(x))))]
return(sub)
}
### B ###
f2 <- function(mat){
sub <- mat[-which(apply(mat,1,function(x)any(is.na(x)))),]
sub <- sub[,-which(apply(sub,2,function(x)any(is.na(x))))]
return(sub)
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
f2(mat)
f2 <- function(mat){
sub <- mat[-which(apply(mat,1,function(x)any(is.na(x)))),]
sub
sub <- sub[,-which(apply(sub,2,function(x)any(is.na(x))))]
sub
return(sub)
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
f2(mat)
f2 <- function(mat){
sub <- mat[-which(apply(mat,1,function(x)any(is.na(x)))),]
print(dim(sub))
sub <- sub[,-which(apply(sub,2,function(x)any(is.na(x))))]
return(sub)
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
f2(mat)
mat
f2 <- function(mat){
sub <- mat[-which(apply(mat,1,function(x)any(is.na(x)))),]
print(sub)
sub <- sub[,-which(apply(sub,2,function(x)any(is.na(x))))]
return(sub)
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
f2(mat)
dim(sub)
dim(mat)
### A ##
f1 <- function(mat){
sub <- mat[,which(apply(mat,2,function(x)!any(is.na(x))))]
return(sub)
}
### B ###
f2 <- function(mat){
sub <- mat[-which(apply(mat,1,function(x)any(is.na(x)))),-which(apply(mat,2,function(x)any(is.na(x))))]
#sub <- sub[,]
return(sub)
}
## Example ##
mat <- matrix(seq(10),nrow=2)
mat[2,3] <- NA
mat[2,1] <- NA
f1(mat)
f2(mat)
mat
